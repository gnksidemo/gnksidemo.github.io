import{_ as s,W as n,X as a,a1 as e}from"./framework-a045178c.js";const t={},o=e(`<h1 id="storage-provider" tabindex="-1"><a class="header-anchor" href="#storage-provider" aria-hidden="true">#</a> Storage Provider</h1><h2 id="abstract" tabindex="-1"><a class="header-anchor" href="#abstract" aria-hidden="true">#</a> Abstract</h2><p>Storage Providers (SP) are storage service infrastructures that organizations or individuals provide and the corresponding roles they play. They use Greenfield as the ledger and the single source of truth. Each SP can and will respond to users&#39; requests to write (upload) and read (download) data, and serve as the gatekeeper for user rights and authentications.</p><p>The SP module is responsible for managing and keeping storage providers in the network. This includes:</p><ul><li><strong>Metadata</strong>: Basic information, such as address, tokens, and status, about each SP.</li><li><strong>Deposit</strong>: Aspiring SPs must stake tokens to guarantee their capacity to offer storage services.</li><li><strong>Slash</strong>: Stored data on an SP is occasionally challenged. If the challenge succeeds, the SP is penalized by losing some of its staked tokens.</li><li><strong>Reputation</strong>: We are implementing a reputation system to assess the quality of each SP&#39;s service. Users can select an SP based on its reputation score to store their data.</li><li><strong>Exit</strong>: SPs can leave voluntarily as long as they adhere to specific rules and recover their staked tokens. Greenfield may also force an SP to exit if it lacks sufficient staked tokens or its reputation score falls below the minimum requirements for an SP.</li></ul><h2 id="key-workflow" tabindex="-1"><a class="header-anchor" href="#key-workflow" aria-hidden="true">#</a> Key Workflow</h2><h3 id="join-the-network" tabindex="-1"><a class="header-anchor" href="#join-the-network" aria-hidden="true">#</a> Join the network</h3><p>SPs have to register themselves first by depositing on the Greenfield blockchain as their &quot;Service Stake&quot;. Validators will go through a dedicated governance procedure to vote for the SPs of their election. SPs are encouraged to advertise their information and prove to the community their capability, as SPs have to provide a professional storage system with high-quality SLA.</p><p>It will take several transactions to join the greenfield storage network for storage provider.</p><ol><li>The funding account of sp should grant the governance module account to deduct tokens for staking.</li><li>The SP submit a <code>CreateStorageProvider</code> proposal to governance module</li><li>Deposit enough tokens for this proposal</li><li>The validators should vote for this proposal. Pass or reject.</li><li>When enough validators vote the proposal, the storage provider will be automatically created on chain.</li></ol><h3 id="leave-the-network" tabindex="-1"><a class="header-anchor" href="#leave-the-network" aria-hidden="true">#</a> Leave the network</h3><p>When the SPs join or leave the network, they have to follow a series of actions to ensure data redundancy for the users; otherwise, their &quot;Service Stake&quot; will be fined. This is achieved through the data availability challenge and validator governance votes.</p><h3 id="reputation" tabindex="-1"><a class="header-anchor" href="#reputation" aria-hidden="true">#</a> Reputation</h3><p>We&#39;ll introduce a reputation system for storage provider to evaluate the quality of service of SP.</p><h2 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> State</h2><h3 id="storageprovider" tabindex="-1"><a class="header-anchor" href="#storageprovider" aria-hidden="true">#</a> StorageProvider</h3><p>Storage Provider can be one of several statuses:</p><ul><li><code>STATUS_IN_SERVICE</code>: The sp is in service. it can serve user&#39;s Create/Upload/Download request.</li><li><code>STATUS_IN_JAILED</code>: The sp has been slashed many times, and its deposit tokens is insufficient.</li><li><code>STATUS_GRACEFUL_EXITING</code>: The SP is exiting gracefully. All the object stored in it will be shifted to another sp.</li><li><code>STATUS_OUT_OF_SERVICE</code>: The SP is out of service. it can be a short-lived service unavailable. Users are unable to store or get payload data on it.</li></ul><p>Storage providers metadata should be primarily stored and accessed by the <code>OperatorAddr</code>, an EIP712 account address for the operator of the storage provider. Three additional indices are maintained per storage provider metadata in order to fulfill required lookups for SealObject/Deposit/Slash/GetApproval.</p><ul><li>StorageProvider: <code>0x21 | OperatorAddr -&gt; ProtocolBuffer(StorageProvider)</code></li><li>StorageProviderByFundingAddress: <code>0x22 | FundingAddress -&gt; OperatorAddr</code></li><li>StorageProviderBySealAddress: <code>0x23 | SealAddress -&gt; OperatorAddr</code></li><li>StorageProviderByApprovalAddress: <code>0x24 | ApprovalAddress -&gt; OperatorAddr</code></li></ul><p>Each storage provider&#39;s state is stored in a <code>StorageProvider</code> struct.</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">message</span> <span class="token class-name">StorageProvider</span> <span class="token punctuation">{</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>equal<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>goproto_stringer<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// operator_address defines the address of the sp&#39;s operator; It also is the unique index key of sp.</span>
  <span class="token builtin">string</span> operator_address <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// fund_address define the account address of the storage provider for deposit, remuneration.</span>
  <span class="token builtin">string</span> funding_address <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// seal_address define the account address of the storage provider for sealObject</span>
  <span class="token builtin">string</span> seal_address <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// approval_address define the account address of the storage provider for ack CreateBucket/Object.</span>
  <span class="token builtin">string</span> approval_address <span class="token operator">=</span> <span class="token number">4</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// total_deposit define the deposit token</span>
  <span class="token builtin">string</span> total_deposit <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">[</span>
    <span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.Int&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>customtype<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;github.com/cosmos/cosmos-sdk/types.Int&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// status is the status of sp, which can be (in_service/read_only_service/graceful_exiting/out_of_service)</span>
  <span class="token positional-class-name class-name">Status</span> status <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
  <span class="token comment">// endpoint is the service address of the storage provider</span>
  <span class="token builtin">string</span> endpoint <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
  <span class="token comment">// description defines the description terms for the validator.</span>
  <span class="token positional-class-name class-name">Description</span> description <span class="token operator">=</span> <span class="token number">8</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="params" tabindex="-1"><a class="header-anchor" href="#params" aria-hidden="true">#</a> Params</h3><p>Params is a module-wide configuration structure that stores system parameters and defines overall functioning of the sp module.</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token comment">// Params defines the parameters for the module.</span>
<span class="token keyword">message</span> <span class="token class-name">Params</span> <span class="token punctuation">{</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>equal<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>goproto_stringer<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// deposit_denom defines the staking coin denomination.</span>
  <span class="token builtin">string</span> deposit_denom <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// min_deposit_amount defines the minimum deposit amount for storage providers.</span>
  <span class="token builtin">string</span> min_deposit <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">[</span>
    <span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.Int&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>customtype<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;github.com/cosmos/cosmos-sdk/types.Int&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deposit-pool" tabindex="-1"><a class="header-anchor" href="#deposit-pool" aria-hidden="true">#</a> Deposit Pool</h3><p>Sp module use its module account to manage all the staking tokens which deposit by storage providers.</p><h2 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> Message</h2><h3 id="msgcreatestorageprovider" tabindex="-1"><a class="header-anchor" href="#msgcreatestorageprovider" aria-hidden="true">#</a> MsgCreateStorageProvider</h3><p>A storage provider is created using the <code>MsgCreateProvider</code> messages.</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">message</span> <span class="token class-name">MsgCreateStorageProvider</span> <span class="token punctuation">{</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>cosmos<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>signer<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;creator&quot;</span><span class="token punctuation">;</span>

  <span class="token builtin">string</span> creator <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token positional-class-name class-name">Description</span> description <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> sp_address <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> funding_address <span class="token operator">=</span> <span class="token number">4</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> seal_address <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> approval_address <span class="token operator">=</span> <span class="token number">6</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> endpoint <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
  <span class="token positional-class-name class-name">cosmos<span class="token punctuation">.</span>base<span class="token punctuation">.</span>v1beta1<span class="token punctuation">.</span>Coin</span> deposit <span class="token operator">=</span> <span class="token number">8</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This message is expected to fail if:</p><ul><li>another storage provider with this operator/seal/funding/approval address is already registered.</li><li>the initial deposit tokens are of a denom not specified as the deposit denom of sp module</li><li>the deposit tokens is insufficient</li></ul><h3 id="msgeditstorageprovider" tabindex="-1"><a class="header-anchor" href="#msgeditstorageprovider" aria-hidden="true">#</a> MsgEditStorageProvider</h3><p>The metadata of a storage provider can be edited by using <code>MsgEditStorageProvider</code> messages.</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token comment">// MsgEditStorageProvider defines a SDK message for editing an existed SP.</span>
<span class="token keyword">message</span> <span class="token class-name">MsgEditStorageProvider</span> <span class="token punctuation">{</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>cosmos<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>signer<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;sp_address&quot;</span><span class="token punctuation">;</span>

  <span class="token builtin">string</span> sp_address <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> endpoint <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token positional-class-name class-name">Description</span> description <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This message is expected to fail if:</p><ul><li>the storage provider is not existed</li><li>the description fields are too large</li></ul><h3 id="msgdeposit" tabindex="-1"><a class="header-anchor" href="#msgdeposit" aria-hidden="true">#</a> MsgDeposit</h3><p>When the deposit tokens of a storage provider are insufficient, it can use <code>MsgDeposit</code> messages to resupply the deposit tokens.</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token comment">// MsgDeposit defines a SDK message to deposit token for SP.</span>
<span class="token keyword">message</span> <span class="token class-name">MsgDeposit</span> <span class="token punctuation">{</span>
  <span class="token keyword">option</span> <span class="token punctuation">(</span>cosmos<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>signer<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;creator&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// creator is the msg signer, it should be sp address or sp&#39;s fund address</span>
  <span class="token builtin">string</span> creator <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// sp_address is the operator address of sp</span>
  <span class="token builtin">string</span> sp_address <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cosmos_proto<span class="token punctuation">.</span>scalar<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;cosmos.AddressString&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// deposit is a mount of token which used to deposit for SP</span>
  <span class="token positional-class-name class-name">cosmos<span class="token punctuation">.</span>base<span class="token punctuation">.</span>v1beta1<span class="token punctuation">.</span>Coin</span> deposit <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>gogoproto<span class="token punctuation">.</span>nullable<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This message is expected to fail if:</p><ul><li>the storage provider is not existed</li><li>the deposit tokens are of a denom not specified as the deposit denom of sp module</li></ul>`,43),p=[o];function i(c,r){return n(),a("div",null,p)}const u=s(t,[["render",i],["__file","storage-provider.html.vue"]]);export{u as default};

import{_ as a,W as n,X as e,a1 as s}from"./framework-a045178c.js";const t={},l=s(`<h1 id="account-balance" tabindex="-1"><a class="header-anchor" href="#account-balance" aria-hidden="true">#</a> Account Balance</h1><h2 id="abstract" tabindex="-1"><a class="header-anchor" href="#abstract" aria-hidden="true">#</a> Abstract</h2><p>The bank module is responsible for handling BNB transfers between accounts and module accounts.</p><p>In addition, the bank module tracks and provides query support for the total supply of BNB in the application.</p><h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## Start a local cluster</span>
$ <span class="token function">bash</span> ./deployment/localup/localup.sh all <span class="token number">3</span>
$ <span class="token builtin class-name">alias</span> <span class="token assign-left variable">gnfd</span><span class="token operator">=</span><span class="token string">&quot;./build/bin/gnfd&quot;</span>
$ <span class="token assign-left variable">receiver</span><span class="token operator">=</span>0x32Ff14Fa1547314b95991976DB432F9Aa648A423
<span class="token comment">## query the balance of receiver</span>
$ gnfd q bank balances <span class="token variable">$receiver</span> <span class="token parameter variable">--node</span> tcp://127.0.0.1:26750 
<span class="token comment">## send 500BNB to the receiver (note the decimal of BNB is 18)</span>
$ gnfd tx bank send validator0 <span class="token variable">$receiver</span> 500000000000000000000BNB <span class="token parameter variable">--home</span> ./deployment/localup/.local/validator0 --keyring-backend <span class="token builtin class-name">test</span> <span class="token parameter variable">--node</span> http://localhost:26750 <span class="token parameter variable">-b</span> block  <span class="token parameter variable">-y</span>
<span class="token comment">## query the balance of receiver again</span>
$ gnfd q bank balances <span class="token variable">$receiver</span> <span class="token parameter variable">--node</span> tcp://127.0.0.1:26750 
<span class="token comment">## try send some token that does not exit, error is expected.</span>
$ gnfd tx bank send validator0 <span class="token variable">$receiver</span> 500000000000000000000ETH <span class="token parameter variable">--home</span> ./deployment/localup/.local/validator0 --keyring-backend <span class="token builtin class-name">test</span> <span class="token parameter variable">--node</span> http://localhost:26750 <span class="token parameter variable">-b</span> block  <span class="token parameter variable">-y</span>
<span class="token comment">## try multi send, send each 500BNB to both receiver and receiver2</span>
$ <span class="token assign-left variable">receiver2</span><span class="token operator">=</span>0x6d6247501b822fd4eaa76fcb64baea360279497f
$ gnfd tx bank multi-send validator0 <span class="token variable">$receiver</span> <span class="token variable">$receiver2</span> 500000000000000000000BNB <span class="token parameter variable">--home</span> ./deployment/localup/.local/validator0 --keyring-backend <span class="token builtin class-name">test</span> <span class="token parameter variable">--node</span> http://localhost:26750 <span class="token parameter variable">-b</span> block  <span class="token parameter variable">-y</span> <span class="token parameter variable">--gas</span> <span class="token number">500000</span>
<span class="token comment">## query the metadata of BNB</span>
$ gnfd q bank  denom-metadata <span class="token parameter variable">--node</span> tcp://127.0.0.1:26750 
<span class="token comment">## query the total supply of BNB</span>
$ gnfd q bank  total    <span class="token parameter variable">--denom</span> BNB   <span class="token parameter variable">--node</span> tcp://127.0.0.1:26750 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="detailed-cli" tabindex="-1"><a class="header-anchor" href="#detailed-cli" aria-hidden="true">#</a> Detailed CLI</h2><p>A user can query and interact with the <code>bank</code> module using the CLI.</p><h3 id="query" tabindex="-1"><a class="header-anchor" href="#query" aria-hidden="true">#</a> Query</h3><p>The <code>query</code> commands allow users to query <code>bank</code> state.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="balances" tabindex="-1"><a class="header-anchor" href="#balances" aria-hidden="true">#</a> balances</h4><p>The <code>balances</code> command allows users to query account balances by address.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank balances <span class="token punctuation">[</span>address<span class="token punctuation">]</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank balances 0x73a4Cf67b46D7E4efbb95Fc6F59D64129299c2E3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example Output:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">balances</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">amount</span><span class="token punctuation">:</span> <span class="token string">&quot;10000000000000000000000&quot;</span>
  <span class="token key atrule">denom</span><span class="token punctuation">:</span> BNB
<span class="token key atrule">pagination</span><span class="token punctuation">:</span>
  <span class="token key atrule">next_key</span><span class="token punctuation">:</span> <span class="token null important">null</span>
  <span class="token key atrule">total</span><span class="token punctuation">:</span> <span class="token string">&quot;0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="denom-metadata" tabindex="-1"><a class="header-anchor" href="#denom-metadata" aria-hidden="true">#</a> denom-metadata</h4><p>The <code>denom-metadata</code> command allows users to query metadata for coin denominations. A user can query metadata for a single denomination using the <code>--denom</code> flag or all denominations without it.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank denom-metadata <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank denom-metadata <span class="token parameter variable">--denom</span> BNB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example Output:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">base</span><span class="token punctuation">:</span> BNB
  <span class="token key atrule">denom_units</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">aliases</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> wei
      <span class="token key atrule">denom</span><span class="token punctuation">:</span> BNB
      <span class="token key atrule">exponent</span><span class="token punctuation">:</span> <span class="token number">0</span>
  <span class="token key atrule">description</span><span class="token punctuation">:</span> The native staking token of the Greenfield.
  <span class="token key atrule">display</span><span class="token punctuation">:</span> BNB
  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token key atrule">symbol</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token key atrule">uri</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token key atrule">uri_hash</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="total" tabindex="-1"><a class="header-anchor" href="#total" aria-hidden="true">#</a> total</h4><p>The <code>total</code> command allows users to query the total supply of coins. A user can query the total supply for a single coin using the <code>--denom</code> flag or all coins without it.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank total <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd query bank total <span class="token parameter variable">--denom</span> BNB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example Output:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">amount</span><span class="token punctuation">:</span> <span class="token string">&quot;1000000000000000800000000000&quot;</span>
<span class="token key atrule">denom</span><span class="token punctuation">:</span> BNB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transactions" tabindex="-1"><a class="header-anchor" href="#transactions" aria-hidden="true">#</a> Transactions</h3><p>The <code>tx</code> commands allow users to interact with the <code>bank</code> module.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd tx bank <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="send" tabindex="-1"><a class="header-anchor" href="#send" aria-hidden="true">#</a> send</h4><p>The <code>send</code> command allows users to send funds from one account to another.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd tx bank send <span class="token punctuation">[</span>from_key_or_address<span class="token punctuation">]</span> <span class="token punctuation">[</span>to_address<span class="token punctuation">]</span> <span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gnfd tx bank send addr1<span class="token punctuation">..</span> addr2<span class="token punctuation">..</span> 100000000000000000000BNB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,40),i=[l];function c(d,o){return n(),e("div",null,i)}const p=a(t,[["render",c],["__file","bank.html.vue"]]);export{p as default};
